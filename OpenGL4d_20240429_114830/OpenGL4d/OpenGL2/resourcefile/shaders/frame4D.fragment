#version 440

in float vs_distance;

out vec4 fs_color;

vec3 color3;
vec4 color4;

vec3 gradientColor3;
vec3 colorGradient(float x)
{
if(x>64.f)
{
gradientColor3=vec3(1,0,1);
}
else if(x<=64.f&&x>8.f)
{
gradientColor3=mix(vec3(0,0,1),vec3(1,0,1),(x-8.f)/56.f);
}
else if(x<=8.f&&x>4.f)
{
gradientColor3=mix(vec3(0,1,1),vec3(0,0,1),(x-4.f)/4.f);
}
else if(x<=4.f&&x>0.f)
{
gradientColor3=mix(vec3(0,1,0),vec3(0,1,1),(x-0.f)/2.f);
}
else if(x<=0.f&&x>-4.f)
{
gradientColor3=mix(vec3(1,1,0),vec3(0,1,0),(x+4.f)/4.f);
}
else if(x<=-4.f&&x>-8.f)
{
gradientColor3=mix(vec3(1,0,0),vec3(1,1,0),(x+8.f)/4.f);
}
else if(x<=-8.f&&x>-64.f)
{
gradientColor3=mix(vec3(1,0,1),vec3(1,0,0),(x+64.f)/56.f);
}
else if(x<=-64.f)
{
gradientColor3=vec3(1,0,1);
}
return gradientColor3;
}

void main()
{
color3=colorGradient(vs_distance);
color4=vec4(color3,1.f);
fs_color = color4;
};